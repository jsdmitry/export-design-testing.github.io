{"version":3,"sources":["../node_modules/jspdf/dist sync","survey.config.ts","export.ts","data.js","DataGridExample.tsx","DataGridVariant1.tsx","DataGridVariant2.tsx","DataGridVariant3.tsx","DataGridVariant4.tsx","Survey.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","json","surveyPostId","title","pages","name","elements","type","html","startWithNewLine","hideNumber","isRequired","choices","value","text","titleLocation","placeHolder","rateMax","cookieName","exportToPdf","selectedOnly","component","doc","jsPDF","exportDataGridToPdf","jsPDFDocument","selectedRowsOnly","then","save","exportToExcel","workbook","ExcelJS","worksheet","addWorksheet","exportDataGridToExcel","autoFilterEnabled","xlsx","writeBuffer","buffer","FileSaver","saveAs","Blob","data","columns","DataGridExample","onToolbarPreparing","onSelectionChanged","selectedRowKeys","dataSource","showBorders","defaultSelectedRowKeys","mode","visible","exportRows","length","dialog","custom","messageHtml","buttons","onClick","hide","show","toolbarOptions","items","splice","location","widget","options","icon","getSelectedRowKeys","DataGridVariant1","dropDownOptions","width","showArrowIcon","keyExpr","displayExpr","DataGridVariant2","DataGridVariant3","useState","setSelectedRowKeys","isSelectedRows","deferRendering","disabled","DataGridVariant4","onItemClick","itemData","StylesManager","applyTheme","SurveyComponent","useEffect","ReactDOM","render","document","getElementById","survey","Model","model","App","Survey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.438daea4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 153;","const json = {\n    surveyPostId: \"98269b22-5a20-47ef-9cda-4dac65e38a49\",\n    title: \"Тестирование вариантов интерфейса экспорта DataGrid\",\n    pages: [\n        {\n            name: \"page1\",\n            elements: [\n                {\n                    type: \"html\",\n                    name: \"task\",\n                    html: \"<h3>Задание</h3><br>В каждом из 4-х вариантов выполните экспорт всех записей таблицы DataGrid в формате Excel. После этого выделите несколько строк и выполните эскорт выбранных строк в PDF. <br><br>После выполнения каждого варианта ответьте на вопрос. После выполнения всех заданий ответьте на несколько общих вопросов. Не забудьте нажать кнопку <b>Complete</b> внизу страницы.\"\n                },\n                {\n                    type: \"panel\",\n                    name: \"panel1\",\n                    elements: [\n                        {\n                            type: \"html\",\n                            name: \"question1\",\n                            html: \"<div id=\\\"variant1\\\"></div>\"\n                        },\n                        {\n                            type: \"radiogroup\",\n                            name: \"question_variant1\",\n                            startWithNewLine: false,\n                            title: \"Оцените выполнение варианта 1\",\n                            hideNumber: true,\n                            isRequired: true,\n                            choices: [\n                                {\n                                    value: \"item1\",\n                                    text: \"Задание выполнено легко и быстро\"\n                                },\n                                {\n                                    value: \"item2\",\n                                    text: \"Задание выполнено, но были вопросы\"\n                                },\n                                {\n                                    value: \"item3\",\n                                    text: \"Задание не выполнено\"\n                                }\n                            ]\n                        },\n                        {\n                            type: \"comment\",\n                            name: \"question_variant1_comment\",\n                            titleLocation: \"hidden\",\n                            hideNumber: true,\n                            placeHolder: \"Поясните ответ\"\n                        }\n                    ],\n                    title: \"Вариант 1\"\n                },\n                {\n                    type: \"panel\",\n                    name: \"panel4\",\n                    elements: [\n                        {\n                            type: \"html\",\n                            name: \"question7\",\n                            html: \"<div id=\\\"variant2\\\"></div>\"\n                        },\n                        {\n                            type: \"radiogroup\",\n                            name: \"question_variant2\",\n                            startWithNewLine: false,\n                            title: \"Оцените выполнение варианта 1\",\n                            hideNumber: true,\n                            isRequired: true,\n                            choices: [\n                                {\n                                    value: \"item1\",\n                                    text: \"Задание выполнено легко и быстро\"\n                                },\n                                {\n                                    value: \"item2\",\n                                    text: \"Задание выполнено, но были вопросы\"\n                                },\n                                {\n                                    value: \"item3\",\n                                    text: \"Задание не выполнено\"\n                                }\n                            ]\n                        },\n                        {\n                            type: \"comment\",\n                            name: \"question_variant2_comment\",\n                            titleLocation: \"hidden\",\n                            hideNumber: true,\n                            placeHolder: \"Поясните ответ\"\n                        }\n                    ],\n                    title: \"Вариант 2\"\n                },\n                {\n                    type: \"panel\",\n                    name: \"panel3\",\n                    elements: [\n                        {\n                            type: \"html\",\n                            name: \"question5\",\n                            html: \"<div id=\\\"variant3\\\"></div>\"\n                        },\n                        {\n                            type: \"radiogroup\",\n                            name: \"question_variant3\",\n                            startWithNewLine: false,\n                            title: \"Оцените выполнение варианта 1\",\n                            hideNumber: true,\n                            isRequired: true,\n                            choices: [\n                                {\n                                    value: \"item1\",\n                                    text: \"Задание выполнено легко и быстро\"\n                                },\n                                {\n                                    value: \"item2\",\n                                    text: \"Задание выполнено, но были вопросы\"\n                                },\n                                {\n                                    value: \"item3\",\n                                    text: \"Задание не выполнено\"\n                                }\n                            ]\n                        },\n                        {\n                            type: \"comment\",\n                            name: \"question_variant3_comment\",\n                            titleLocation: \"hidden\",\n                            hideNumber: true,\n                            placeHolder: \"Поясните ответ\"\n                        }\n                    ],\n                    title: \"Вариант 3\"\n                },\n                {\n                    type: \"panel\",\n                    name: \"panel2\",\n                    elements: [\n                        {\n                            type: \"html\",\n                            name: \"question3\",\n                            html: \"<div id=\\\"variant4\\\"></div>\"\n                        },\n                        {\n                            type: \"radiogroup\",\n                            name: \"question_variant4\",\n                            startWithNewLine: false,\n                            title: \"Оцените выполнение варианта 1\",\n                            hideNumber: true,\n                            isRequired: true,\n                            choices: [\n                                {\n                                    value: \"item1\",\n                                    text: \"Задание выполнено легко и быстро\"\n                                },\n                                {\n                                    value: \"item2\",\n                                    text: \"Задание выполнено, но были вопросы\"\n                                },\n                                {\n                                    value: \"item3\",\n                                    text: \"Задание не выполнено\"\n                                }\n                            ]\n                        },\n                        {\n                            type: \"comment\",\n                            name: \"question_variant4_comment\",\n                            titleLocation: \"hidden\",\n                            hideNumber: true,\n                            placeHolder: \"Поясните ответ\"\n                        }\n                    ],\n                    title: \"Вариант 4\"\n                },\n                {\n                    type: \"panel\",\n                    name: \"panel5\",\n                    elements: [\n                        {\n                            type: \"rating\",\n                            name: \"chooseVariant\",\n                            title: \"Какой из вариантов реализации вам понравился больше всего\",\n                            hideNumber: true,\n                            isRequired: true,\n                            rateMax: 4\n                        },\n                        {\n                            type: \"comment\",\n                            name: \"wishes\",\n                            title: \"Напишите пожелания/предложения по реализации управления экспортом\",\n                            hideNumber: true\n                        }\n                    ],\n                    title: \"Общие вопросы\"\n                }\n            ]\n        },\n    ],\n    cookieName: \"DevExtreme-Export-Design-Testing\"\n};\n\nexport default json;\n","import { jsPDF } from \"jspdf\";\nimport * as ExcelJS from \"exceljs\";\nimport { exportDataGrid as exportDataGridToPdf } from \"devextreme/pdf_exporter\";\nimport { exportDataGrid as exportDataGridToExcel } from \"devextreme/excel_exporter\";\nimport \"jspdf-autotable\";\nimport FileSaver from \"file-saver\";\n\nexport function exportToPdf(selectedOnly: boolean, component: any) {\n    const doc = new jsPDF();\n    exportDataGridToPdf({\n        jsPDFDocument: doc,\n        component,\n        selectedRowsOnly: selectedOnly\n    }).then(() => doc.save(\"Customers.pdf\"));\n}\n\nexport function exportToExcel(selectedOnly: boolean, component: any) {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Employees');\n\n    exportDataGridToExcel({\n        component,\n        worksheet: worksheet,\n        autoFilterEnabled: true,\n        selectedRowsOnly: selectedOnly\n    }).then(() => {\n        workbook.xlsx.writeBuffer().then((buffer:any) => {\n            FileSaver.saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Employees.xlsx');\n        });\n    });\n}\n","const data = [{\n\t\"ID\": 1,\n\t\"CompanyName\": \"Super Mart of the West\",\n\t\"Address\": \"702 SW 8th Street\",\n\t\"City\": \"Bentonville\",\n\t\"State\": \"Arkansas\",\n\t\"Zipcode\": 72716,\n\t\"Phone\": \"(800) 555-2797\",\n\t\"Fax\": \"(800) 555-2171\",\n\t\"Website\": \"http://www.nowebsitesupermart.com\"\n}, {\n\t\"ID\": 2,\n\t\"CompanyName\": \"Electronics Depot\",\n\t\"Address\": \"2455 Paces Ferry Road NW\",\n\t\"City\": \"Atlanta\",\n\t\"State\": \"Georgia\",\n\t\"Zipcode\": 30339,\n\t\"Phone\": \"(800) 595-3232\",\n\t\"Fax\": \"(800) 595-3231\",\n\t\"Website\": \"http://www.nowebsitedepot.com\"\n}, {\n\t\"ID\": 3,\n\t\"CompanyName\": \"K&S Music\",\n\t\"Address\": \"1000 Nicllet Mall\",\n\t\"City\": \"Minneapolis\",\n\t\"State\": \"Minnesota\",\n\t\"Zipcode\": 55403,\n\t\"Phone\": \"(612) 304-6073\",\n\t\"Fax\": \"(612) 304-6074\",\n\t\"Website\": \"http://www.nowebsitemusic.com\"\n}, {\n\t\"ID\": 4,\n\t\"CompanyName\": \"Tom's Club\",\n\t\"Address\": \"999 Lake Drive\",\n\t\"City\": \"Issaquah\",\n\t\"State\": \"Washington\",\n\t\"Zipcode\": 98027,\n\t\"Phone\": \"(800) 955-2292\",\n\t\"Fax\": \"(800) 955-2293\",\n\t\"Website\": \"http://www.nowebsitetomsclub.com\"\n}, {\n\t\"ID\": 5,\n\t\"CompanyName\": \"E-Mart\",\n\t\"Address\": \"3333 Beverly Rd\",\n\t\"City\": \"Hoffman Estates\",\n\t\"State\": \"Illinois\",\n\t\"Zipcode\": 60179,\n\t\"Phone\": \"(847) 286-2500\",\n\t\"Fax\": \"(847) 286-2501\",\n\t\"Website\": \"http://www.nowebsiteemart.com\"\n}, {\n\t\"ID\": 6,\n\t\"CompanyName\": \"Walters\",\n\t\"Address\": \"200 Wilmot Rd\",\n\t\"City\": \"Deerfield\",\n\t\"State\": \"Illinois\",\n\t\"Zipcode\": 60015,\n\t\"Phone\": \"(847) 940-2500\",\n\t\"Fax\": \"(847) 940-2501\",\n\t\"Website\": \"http://www.nowebsitewalters.com\"\n}, {\n\t\"ID\": 7,\n\t\"CompanyName\": \"StereoShack\",\n\t\"Address\": \"400 Commerce S\",\n\t\"City\": \"Fort Worth\",\n\t\"State\": \"Texas\",\n\t\"Zipcode\": 76102,\n\t\"Phone\": \"(817) 820-0741\",\n\t\"Fax\": \"(817) 820-0742\",\n\t\"Website\": \"http://www.nowebsiteshack.com\"\n}, {\n\t\"ID\": 8,\n\t\"CompanyName\": \"Circuit Town\",\n\t\"Address\": \"2200 Kensington Court\",\n\t\"City\": \"Oak Brook\",\n\t\"State\": \"Illinois\",\n\t\"Zipcode\": 60523,\n\t\"Phone\": \"(800) 955-2929\",\n\t\"Fax\": \"(800) 955-9392\",\n\t\"Website\": \"http://www.nowebsitecircuittown.com\"\n}, {\n\t\"ID\": 9,\n\t\"CompanyName\": \"Premier Buy\",\n\t\"Address\": \"7601 Penn Avenue South\",\n\t\"City\": \"Richfield\",\n\t\"State\": \"Minnesota\",\n\t\"Zipcode\": 55423,\n\t\"Phone\": \"(612) 291-1000\",\n\t\"Fax\": \"(612) 291-2001\",\n\t\"Website\": \"http://www.nowebsitepremierbuy.com\"\n}, {\n\t\"ID\": 10,\n\t\"CompanyName\": \"ElectrixMax\",\n\t\"Address\": \"263 Shuman Blvd\",\n\t\"City\": \"Naperville\",\n\t\"State\": \"Illinois\",\n\t\"Zipcode\": 60563,\n\t\"Phone\": \"(630) 438-7800\",\n\t\"Fax\": \"(630) 438-7801\",\n\t\"Website\": \"http://www.nowebsiteelectrixmax.com\"\n}, {\n\t\"ID\": 11,\n\t\"CompanyName\": \"Video Emporium\",\n\t\"Address\": \"1201 Elm Street\",\n\t\"City\": \"Dallas\",\n\t\"State\": \"Texas\",\n\t\"Zipcode\": 75270,\n\t\"Phone\": \"(214) 854-3000\",\n\t\"Fax\": \"(214) 854-3001\",\n\t\"Website\": \"http://www.nowebsitevideoemporium.com\"\n}, {\n\t\"ID\": 12,\n\t\"CompanyName\": \"Screen Shop\",\n\t\"Address\": \"1000 Lowes Blvd\",\n\t\"City\": \"Mooresville\",\n\t\"State\": \"North Carolina\",\n\t\"Zipcode\": 28117,\n\t\"Phone\": \"(800) 445-6937\",\n\t\"Fax\": \"(800) 445-6938\",\n\t\"Website\": \"http://www.nowebsitescreenshop.com\"\n}];\n\nconst columns = [\"CompanyName\", \"City\", \"State\", \"Phone\", \"Fax\"];\n\nexport { data, columns };\n","import React from \"react\";\nimport DataGrid, { Selection, SearchPanel, GroupPanel } from \"devextreme-react/data-grid\";\nimport { data, columns } from \"./data\";\nimport { DataGridExampleProps } from \"./interfaces\";\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\n\nexport default function DataGridExample({ onToolbarPreparing, onSelectionChanged, selectedRowKeys }: DataGridExampleProps) {\n    return (\n        <DataGrid\n            dataSource={data}\n            columns={columns}\n            onToolbarPreparing={onToolbarPreparing}\n            onSelectionChanged={onSelectionChanged}\n            showBorders={true}\n            defaultSelectedRowKeys={selectedRowKeys}\n        >\n            <Selection mode=\"multiple\" />\n            <SearchPanel visible={true} />\n            <GroupPanel visible={true} />\n        </DataGrid>\n    );\n}\n","import React from \"react\";\nimport { exportToPdf, exportToExcel } from \"./export\"\nimport DataGridExample from \"./DataGridExample\";\nimport { custom } from 'devextreme/ui/dialog';\nimport { SelectedRowKeysType } from \"./interfaces\";\n\nfunction exportRows(type: string, component: any, selectedRowKeys: SelectedRowKeysType) {\n    if(selectedRowKeys.length) {\n        const dialog = custom({\n            title: 'Export',\n            messageHtml: 'Choose export mode',\n            buttons: [{\n                text: 'Export selected rows',\n                onClick: () => {\n                    if(type === 'pdf') {\n                        // export selected to pdf\n                        exportToPdf(true, component);\n                    } else {\n                        // export selected to pdf\n                        exportToExcel(true, component);\n                    }\n                }\n            }, {\n                text: 'Export all rows',\n                onClick: () => {\n                    if(type === 'pdf') {\n                        // export all to pdf\n                        exportToPdf(false, component);\n                    } else {\n                        // export all to excel\n                        exportToExcel(false, component);\n                    }\n                }\n            }, {\n                text: 'Cancel',\n                onClick: () => dialog.hide()\n            }]\n        });\n        dialog.show();\n    } else {\n        if(type === 'pdf') {\n            // export all to pdf\n            exportToPdf(false, component);\n        } else {\n            // export all to excel\n            exportToExcel(false, component);\n        }\n    }\n}\n\nfunction onToolbarPreparing(e: any) {\n    const component = e.component;\n    e.toolbarOptions.items.splice(0, 0, {\n        location: 'after',\n        widget: 'dxButton',\n        options: {\n            icon: 'xlsxfile',\n            onClick: () => exportRows('xlsx', component, component.getSelectedRowKeys())\n        }\n    }, {\n        location: 'after',\n        widget: 'dxButton',\n        options: {\n            icon: 'pdffile',\n            onClick: () => exportRows('pdf', component, component.getSelectedRowKeys())\n        }\n    });\n}\n\nexport default function DataGridVariant1() {\n    return (\n        <DataGridExample onToolbarPreparing={onToolbarPreparing}/>\n    );\n}\n","import React from \"react\";\nimport {exportToExcel, exportToPdf} from \"./export\"\nimport DataGridExample from \"./DataGridExample\";\nimport \"devextreme/ui/drop_down_button\";\n\nfunction onToolbarPreparing(e: any) {\n    const component = e.component;\n    e.toolbarOptions.items.splice(0, 0, {\n        location: 'after',\n        widget: 'dxDropDownButton',\n        options: {\n            dropDownOptions: { width: 120 },\n            text: 'Export',\n            showArrowIcon: false,\n            icon: 'export',\n            keyExpr: 'id',\n            displayExpr: 'text',\n            items: [{\n                id: 1,\n                text: 'To Excel',\n                icon: 'xlsxfile',\n                onClick: () => exportToExcel(component.getSelectedRowKeys().length, component)\n            }, {\n                id: 2,\n                text: 'To PDF',\n                icon: 'pdffile',\n                onClick: () => exportToPdf(component.getSelectedRowKeys().length, component)\n            }]\n        }\n    });\n}\n\nexport default function DataGridVariant2() {\n    return (\n        <DataGridExample onToolbarPreparing={onToolbarPreparing}/>\n    );\n}\n","import React, { useState } from \"react\";\nimport { exportToPdf, exportToExcel } from \"./export\"\nimport DataGridExample from \"./DataGridExample\";\nimport \"devextreme/ui/drop_down_button\";\nimport \"./variant3.css\";\n\nfunction onToolbarPreparing(e: any, isSelectedRows: boolean) {\n    const component = e.component;\n    e.toolbarOptions.items.splice(0, 0, {\n        location: 'after',\n        widget: 'dxDropDownButton',\n        options: {\n            dropDownOptions: { width: 250, deferRendering: false },\n            text: 'Export',\n            showArrowIcon: false,\n            icon: 'export',\n            keyExpr: 'id',\n            displayExpr: 'text',\n            items: [{\n                id: 1,\n                text: \"Export all data to Excel\",\n                icon: 'xlsxfile',\n                onClick: () => exportToExcel(false, component)\n            }, {\n                id: 2,\n                text: \"Export selected row to Excel\",\n                icon: 'xlsxfile',\n                disabled: !isSelectedRows,\n                onClick: () => exportToExcel(true, component)\n            }, {\n                id: 3,\n                text: \"Export all data to PDF\",\n                icon: 'pdffile',\n                onClick: () => exportToPdf(false, component)\n            }, {\n                id: 4,\n                disabled: !isSelectedRows,\n                text: \"Export selected row to PDF\",\n                icon: 'pdffile',\n                onClick: () => exportToPdf(true, component)\n            }]\n        }\n    });\n}\n\nexport default function DataGridVariant3() {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<any[]>([]);\n    return (\n        <DataGridExample\n            onToolbarPreparing={(e:any) => onToolbarPreparing(e, selectedRowKeys.length > 0)}\n            onSelectionChanged={(e:any) => setSelectedRowKeys(e.selectedRowKeys)}\n            selectedRowKeys={selectedRowKeys}\n        />\n    );\n}\n","import React, {useState} from \"react\";\nimport { exportToPdf, exportToExcel } from \"./export\"\nimport DataGridExample from \"./DataGridExample\";\n\nfunction onToolbarPreparing(e: any, isSelectedRows: boolean) {\n    const component = e.component;\n\n    e.toolbarOptions.items.splice(0, 0, {\n        location: 'after',\n        widget: 'dxMenu',\n        options: {\n            onItemClick: (e: any) => {\n                if(e.itemData.id === '1_1_1') {\n                    exportToExcel(false, component);\n                }\n                else if(e.itemData.id === '1_1_2') {\n                    exportToExcel(true, component);\n                }\n                else if(e.itemData.id === '1_2_1') {\n                    exportToPdf(false, component);\n                }\n                else if(e.itemData.id === '1_2_2') {\n                    exportToPdf(true, component);\n                }\n            },\n            dataSource: [{\n                id: '1',\n                name: 'Export',\n                icon: 'export',\n                displayExpr: 'name',\n                items: [{\n                    id: '1_1',\n                    name: 'Export to Excel',\n                    icon: 'xlsxfile',\n                    items: [{\n                        id: '1_1_1',\n                        name: 'Export all'\n                    }, {\n                        id: '1_1_2',\n                        name: 'Export selected',\n                        disabled: !isSelectedRows\n                    }]\n                }, {\n                    id: '1_2',\n                    name: 'Export to PDF',\n                    icon: 'pdffile',\n                    items: [{\n                        id: '1_2_1',\n                        name: 'Export all'\n                    }, {\n                        id: '1_2_2',\n                        name: 'Export selected',\n                        disabled: !isSelectedRows\n                    }]\n                }]\n            }],\n            displayExpr: 'name'\n        }\n    });\n}\n\nexport default function DataGridVariant4() {\n    const [selectedRowKeys, setSelectedRowKeys] = useState<any[]>([]);\n    return (\n        <DataGridExample\n            onToolbarPreparing={(e:any) => onToolbarPreparing(e, selectedRowKeys.length > 0)}\n            onSelectionChanged={(e:any) => setSelectedRowKeys(e.selectedRowKeys)}\n            selectedRowKeys={selectedRowKeys}\n        />\n    );\n}\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Model, StylesManager, Survey } from \"survey-react\";\nimport { SurveyProps } from \"./interfaces\";\nimport \"survey-react/modern.css\";\nimport \"./index.css\";\nimport DataGridVariant1 from \"./DataGridVariant1\";\nimport DataGridVariant2 from \"./DataGridVariant2\";\nimport DataGridVariant3 from \"./DataGridVariant3\";\nimport DataGridVariant4 from \"./DataGridVariant4\";\n\n\nStylesManager.applyTheme(\"modern\");\n\nfunction SurveyComponent({ json }: SurveyProps) {\n    useEffect(() => {\n        ReactDOM.render(\n            <DataGridVariant1/>,\n            document.getElementById('variant1')\n        );\n        ReactDOM.render(\n            <DataGridVariant2/>,\n            document.getElementById('variant2')\n        );\n        ReactDOM.render(\n            <DataGridVariant3/>,\n            document.getElementById('variant3')\n        );\n        ReactDOM.render(\n            <DataGridVariant4/>,\n            document.getElementById('variant4')\n        );\n    });\n\n    const survey = new Model(json);\n    return (\n        <Survey model={survey} />\n    );\n}\n\nexport default SurveyComponent;\n","import React from 'react';\nimport json from './survey.config';\nimport Survey from './Survey';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Survey json={json}></Survey>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}